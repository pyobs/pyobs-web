{"version":3,"sources":["webpack:///./node_modules/ngx-bootstrap/progressbar/bar.component.js","webpack:///./node_modules/ngx-bootstrap/progressbar/index.js","webpack:///./node_modules/ngx-bootstrap/progressbar/progressbar.component.js","webpack:///./node_modules/ngx-bootstrap/progressbar/progressbar.config.js","webpack:///./node_modules/ngx-bootstrap/progressbar/progressbar.module.js","webpack:///./node_modules/ngx-bootstrap/utils/decorators.js","webpack:///./node_modules/ngx-bootstrap/utils/facade/browser.js","webpack:///./node_modules/ngx-bootstrap/utils/index.js","webpack:///./node_modules/ngx-bootstrap/utils/linked-list.class.js","webpack:///./node_modules/ngx-bootstrap/utils/theme-provider.js","webpack:///./node_modules/ngx-bootstrap/utils/trigger.class.js","webpack:///./node_modules/ngx-bootstrap/utils/utils.class.js","webpack:///./src/app/camera/camera-routing.module.ts","webpack:///./src/app/camera/camera.component.css","webpack:///./src/app/camera/camera.component.html","webpack:///./src/app/camera/camera.component.ts","webpack:///./src/app/camera/camera.module.ts","webpack:///./src/app/camera/image-preview/image-preview.component.css","webpack:///./src/app/camera/image-preview/image-preview.component.html","webpack:///./src/app/camera/image-preview/image-preview.component.ts","webpack:///./src/app/camera/take-image/take-image.component.css","webpack:///./src/app/camera/take-image/take-image.component.html","webpack:///./src/app/camera/take-image/take-image.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAA8C;AACf;AACf;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,+CAA+C;AAC/C,SAAS,kGAA2C,2DAAa,IAAI;AACrE,MAAM;AACN;AACA,kBAAkB,4DAAc;AAChC,mBAAmB,4DAAc;AACjC,yBAAyB,4FAA8C;AACvE;AACA;AACA,CAAC;AACO;AACR,yC;;;;;;;;;;;;;;;;;;;;;;;;;ACtFuB;AACQ;AACH;AACA;AAC5B,iC;;;;;;;;;;;;;;;;;ACJwC;AACZ;AACZ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,kPAAkP,cAAc;AAChQ;AACA,sCAAsC,oBAAoB,sBAAsB,OAAO;AACvF;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,uDAAuD;AACvD,SAAS,+EAA2B;AACpC,MAAM;AACN;AACA,qBAAqB,4DAAc;AACnC,qBAAqB,4DAAc;AACnC,kBAAkB,4DAAc;AAChC,mBAAmB,4DAAc;AACjC,iBAAiB,uFAAyC,GAAG,4DAAc;AAC3E,sBAAsB,6FAA+C;AACrE;AACA;AACA,CAAC;AACO;AACR,iD;;;;;;;;;;;;;;;AC3EqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA,CAAC;AACO;AACR,8C;;;;;;;;;;;;;;;;;;;AChBuB;AACJ;AACI;AACQ;AACH;AAC5B;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA,CAAC;AACO;AACR,8C;;;;;;;;;;;;;ACvBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,sC;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ;AACR;AACA;AACA,kCAAyC,oBAAoB,EAAE,gBAAgB,aAAa;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBmB;AACE;AACL;AACE;AACF;AACG;AACnB,iC;;;;;;;;;;;;;ACNA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA,kCAAkC,wBAAwB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA,6BAA6B,qCAAqC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR,6C;;;;;;;;;;;;;;;;ACjPiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","file":"camera-camera-module.js","sourcesContent":["import { Component, Host, HostBinding, Input } from '@angular/core';\nimport { ProgressbarComponent } from './progressbar.component';\nimport { isBs3 } from '../utils/theme-provider';\n// todo: number pipe\n// todo: use query from progress?\nvar BarComponent = (function () {\n    function BarComponent(progress) {\n        this.percent = 0;\n        this.progress = progress;\n    }\n    Object.defineProperty(BarComponent.prototype, \"value\", {\n        /** current value of progress bar */\n        get: function () {\n            return this._value;\n        },\n        set: function (v) {\n            if (!v && v !== 0) {\n                return;\n            }\n            this._value = v;\n            this.recalculatePercentage();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarComponent.prototype, \"setBarWidth\", {\n        get: function () {\n            this.recalculatePercentage();\n            return this.percent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarComponent.prototype, \"isBs3\", {\n        get: function () {\n            return isBs3();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BarComponent.prototype.ngOnInit = function () {\n        this.progress.addBar(this);\n    };\n    BarComponent.prototype.ngOnDestroy = function () {\n        this.progress.removeBar(this);\n    };\n    BarComponent.prototype.recalculatePercentage = function () {\n        this.percent = +(this.value / this.progress.max * 100).toFixed(2);\n        var totalPercentage = this.progress.bars\n            .reduce(function (total, bar) {\n            return total + bar.percent;\n        }, 0);\n        if (totalPercentage > 100) {\n            this.percent -= totalPercentage - 100;\n        }\n    };\n    BarComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'bar',\n                    template: \"<ng-content></ng-content> \",\n                    host: {\n                        role: 'progressbar',\n                        'aria-valuemin': '0',\n                        '[class]': '\"progress-bar \" + (type ? \"progress-bar-\" + type + \" bg-\" + type : \"\")',\n                        '[class.progress-bar-animated]': '!isBs3 && animate',\n                        '[class.progress-bar-striped]': 'striped',\n                        '[class.active]': 'isBs3 && animate',\n                        '[attr.aria-valuenow]': 'value',\n                        '[attr.aria-valuetext]': 'percent ? percent.toFixed(0) + \"%\" : \"\"',\n                        '[attr.aria-valuemax]': 'max',\n                        '[style.height.%]': '\"100\"'\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    BarComponent.ctorParameters = function () { return [\n        { type: ProgressbarComponent, decorators: [{ type: Host },] },\n    ]; };\n    BarComponent.propDecorators = {\n        'type': [{ type: Input },],\n        'value': [{ type: Input },],\n        'setBarWidth': [{ type: HostBinding, args: ['style.width.%',] },],\n    };\n    return BarComponent;\n}());\nexport { BarComponent };\n//# sourceMappingURL=bar.component.js.map","export { BarComponent } from './bar.component';\nexport { ProgressbarComponent } from './progressbar.component';\nexport { ProgressbarModule } from './progressbar.module';\nexport { ProgressbarConfig } from './progressbar.config';\n//# sourceMappingURL=index.js.map","import { Component, HostBinding, Input } from '@angular/core';\nimport { ProgressbarConfig } from './progressbar.config';\nimport { isBs3 } from '../utils/index';\nvar ProgressbarComponent = (function () {\n    function ProgressbarComponent(config) {\n        this.isStacked = false;\n        this.addClass = true;\n        this.bars = [];\n        this._max = 100;\n        Object.assign(this, config);\n    }\n    Object.defineProperty(ProgressbarComponent.prototype, \"value\", {\n        /** current value of progress bar. Could be a number or array of objects\n         * like {\"value\":15,\"type\":\"info\",\"label\":\"15 %\"}\n         */\n        set: function (value) {\n            this.isStacked = Array.isArray(value);\n            this._value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProgressbarComponent.prototype, \"isBs3\", {\n        get: function () {\n            return isBs3();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProgressbarComponent.prototype, \"max\", {\n        /** maximum total value of progress element */\n        get: function () {\n            return this._max;\n        },\n        set: function (v) {\n            this._max = v;\n            this.bars.forEach(function (bar) {\n                bar.recalculatePercentage();\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ProgressbarComponent.prototype.addBar = function (bar) {\n        bar.animate = this.animate;\n        bar.striped = this.striped;\n        this.bars.push(bar);\n    };\n    ProgressbarComponent.prototype.removeBar = function (bar) {\n        this.bars.splice(this.bars.indexOf(bar), 1);\n    };\n    ProgressbarComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'progressbar',\n                    template: \"<bar [type]=\\\"type\\\" [value]=\\\"_value\\\" *ngIf=\\\"!isStacked\\\"> <ng-content></ng-content> </bar> <ng-template [ngIf]=\\\"isStacked\\\"> <bar *ngFor=\\\"let item of _value\\\" [type]=\\\"item.type\\\" [value]=\\\"item.value\\\">{{ item.label }}</bar> </ng-template> \",\n                    styles: [\n                        \"\\n    :host {\\n      width: 100%;\\n      display: flex;\\n    }\\n  \"\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    ProgressbarComponent.ctorParameters = function () { return [\n        { type: ProgressbarConfig, },\n    ]; };\n    ProgressbarComponent.propDecorators = {\n        'animate': [{ type: Input },],\n        'striped': [{ type: Input },],\n        'type': [{ type: Input },],\n        'value': [{ type: Input },],\n        'max': [{ type: HostBinding, args: ['attr.max',] }, { type: Input },],\n        'addClass': [{ type: HostBinding, args: ['class.progress',] },],\n    };\n    return ProgressbarComponent;\n}());\nexport { ProgressbarComponent };\n//# sourceMappingURL=progressbar.component.js.map","import { Injectable } from '@angular/core';\nvar ProgressbarConfig = (function () {\n    function ProgressbarConfig() {\n        /** if `true` changing value of progress bar will be animated */\n        this.animate = false;\n        /** maximum total value of progress element */\n        this.max = 100;\n    }\n    ProgressbarConfig.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ProgressbarConfig.ctorParameters = function () { return []; };\n    return ProgressbarConfig;\n}());\nexport { ProgressbarConfig };\n//# sourceMappingURL=progressbar.config.js.map","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BarComponent } from './bar.component';\nimport { ProgressbarComponent } from './progressbar.component';\nimport { ProgressbarConfig } from './progressbar.config';\nvar ProgressbarModule = (function () {\n    function ProgressbarModule() {\n    }\n    ProgressbarModule.forRoot = function () {\n        return { ngModule: ProgressbarModule, providers: [ProgressbarConfig] };\n    };\n    ProgressbarModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule],\n                    declarations: [BarComponent, ProgressbarComponent],\n                    exports: [BarComponent, ProgressbarComponent]\n                },] },\n    ];\n    /** @nocollapse */\n    ProgressbarModule.ctorParameters = function () { return []; };\n    return ProgressbarModule;\n}());\nexport { ProgressbarModule };\n//# sourceMappingURL=progressbar.module.js.map","/*tslint:disable:no-invalid-this */\nexport function OnChange(defaultValue) {\n    var sufix = 'Change';\n    return function OnChangeHandler(target, propertyKey) {\n        var _key = \" __\" + propertyKey + \"Value\";\n        Object.defineProperty(target, propertyKey, {\n            get: function () {\n                return this[_key];\n            },\n            set: function (value) {\n                var prevValue = this[_key];\n                this[_key] = value;\n                if (prevValue !== value && this[propertyKey + sufix]) {\n                    this[propertyKey + sufix].emit(value);\n                }\n            }\n        });\n    };\n}\n/* tslint:enable */\n//# sourceMappingURL=decorators.js.map","/*tslint:disable */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * JS version of browser APIs. This library can only run in the browser.\n */\nvar win = (typeof window !== 'undefined' && window) || {};\nexport { win as window };\nexport var document = win.document;\nexport var location = win.location;\nexport var gc = win['gc'] ? function () { return win['gc'](); } : function () { return null; };\nexport var performance = win['performance'] ? win['performance'] : null;\nexport var Event = win['Event'];\nexport var MouseEvent = win['MouseEvent'];\nexport var KeyboardEvent = win['KeyboardEvent'];\nexport var EventTarget = win['EventTarget'];\nexport var History = win['History'];\nexport var Location = win['Location'];\nexport var EventListener = win['EventListener'];\n//# sourceMappingURL=browser.js.map","export { OnChange } from './decorators';\nexport { LinkedList } from './linked-list.class';\nexport { isBs3 } from './theme-provider';\nexport { Trigger } from './trigger.class';\nexport { Utils } from './utils.class';\nexport { setTheme } from './theme-provider';\n//# sourceMappingURL=index.js.map","var LinkedList = (function () {\n    function LinkedList() {\n        this.length = 0;\n        this.asArray = [];\n        // Array methods overriding END\n    }\n    LinkedList.prototype.get = function (position) {\n        if (this.length === 0 || position < 0 || position >= this.length) {\n            return void 0;\n        }\n        var current = this.head;\n        for (var index = 0; index < position; index++) {\n            current = current.next;\n        }\n        return current.value;\n    };\n    LinkedList.prototype.add = function (value, position) {\n        if (position === void 0) { position = this.length; }\n        if (position < 0 || position > this.length) {\n            throw new Error('Position is out of the list');\n        }\n        var node = {\n            value: value,\n            next: undefined,\n            previous: undefined\n        };\n        if (this.length === 0) {\n            this.head = node;\n            this.tail = node;\n            this.current = node;\n        }\n        else {\n            if (position === 0) {\n                // first node\n                node.next = this.head;\n                this.head.previous = node;\n                this.head = node;\n            }\n            else if (position === this.length) {\n                // last node\n                this.tail.next = node;\n                node.previous = this.tail;\n                this.tail = node;\n            }\n            else {\n                // node in middle\n                var currentPreviousNode = this.getNode(position - 1);\n                var currentNextNode = currentPreviousNode.next;\n                currentPreviousNode.next = node;\n                currentNextNode.previous = node;\n                node.previous = currentPreviousNode;\n                node.next = currentNextNode;\n            }\n        }\n        this.length++;\n        this.createInternalArrayRepresentation();\n    };\n    LinkedList.prototype.remove = function (position) {\n        if (position === void 0) { position = 0; }\n        if (this.length === 0 || position < 0 || position >= this.length) {\n            throw new Error('Position is out of the list');\n        }\n        if (position === 0) {\n            // first node\n            this.head = this.head.next;\n            if (this.head) {\n                // there is no second node\n                this.head.previous = undefined;\n            }\n            else {\n                // there is no second node\n                this.tail = undefined;\n            }\n        }\n        else if (position === this.length - 1) {\n            // last node\n            this.tail = this.tail.previous;\n            this.tail.next = undefined;\n        }\n        else {\n            // middle node\n            var removedNode = this.getNode(position);\n            removedNode.next.previous = removedNode.previous;\n            removedNode.previous.next = removedNode.next;\n        }\n        this.length--;\n        this.createInternalArrayRepresentation();\n    };\n    LinkedList.prototype.set = function (position, value) {\n        if (this.length === 0 || position < 0 || position >= this.length) {\n            throw new Error('Position is out of the list');\n        }\n        var node = this.getNode(position);\n        node.value = value;\n        this.createInternalArrayRepresentation();\n    };\n    LinkedList.prototype.toArray = function () {\n        return this.asArray;\n    };\n    LinkedList.prototype.findAll = function (fn) {\n        var current = this.head;\n        var result = [];\n        for (var index = 0; index < this.length; index++) {\n            if (fn(current.value, index)) {\n                result.push({ index: index, value: current.value });\n            }\n            current = current.next;\n        }\n        return result;\n    };\n    // Array methods overriding start\n    LinkedList.prototype.push = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        args.forEach(function (arg) {\n            _this.add(arg);\n        });\n        return this.length;\n    };\n    LinkedList.prototype.pop = function () {\n        if (this.length === 0) {\n            return undefined;\n        }\n        var last = this.tail;\n        this.remove(this.length - 1);\n        return last.value;\n    };\n    LinkedList.prototype.unshift = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        args.reverse();\n        args.forEach(function (arg) {\n            _this.add(arg, 0);\n        });\n        return this.length;\n    };\n    LinkedList.prototype.shift = function () {\n        if (this.length === 0) {\n            return undefined;\n        }\n        var lastItem = this.head.value;\n        this.remove();\n        return lastItem;\n    };\n    LinkedList.prototype.forEach = function (fn) {\n        var current = this.head;\n        for (var index = 0; index < this.length; index++) {\n            fn(current.value, index);\n            current = current.next;\n        }\n    };\n    LinkedList.prototype.indexOf = function (value) {\n        var current = this.head;\n        var position = 0;\n        for (var index = 0; index < this.length; index++) {\n            if (current.value === value) {\n                position = index;\n                break;\n            }\n            current = current.next;\n        }\n        return position;\n    };\n    LinkedList.prototype.some = function (fn) {\n        var current = this.head;\n        var result = false;\n        while (current && !result) {\n            if (fn(current.value)) {\n                result = true;\n                break;\n            }\n            current = current.next;\n        }\n        return result;\n    };\n    LinkedList.prototype.every = function (fn) {\n        var current = this.head;\n        var result = true;\n        while (current && result) {\n            if (!fn(current.value)) {\n                result = false;\n            }\n            current = current.next;\n        }\n        return result;\n    };\n    LinkedList.prototype.toString = function () {\n        return '[Linked List]';\n    };\n    LinkedList.prototype.find = function (fn) {\n        var current = this.head;\n        var result;\n        for (var index = 0; index < this.length; index++) {\n            if (fn(current.value, index)) {\n                result = current.value;\n                break;\n            }\n            current = current.next;\n        }\n        return result;\n    };\n    LinkedList.prototype.findIndex = function (fn) {\n        var current = this.head;\n        var result;\n        for (var index = 0; index < this.length; index++) {\n            if (fn(current.value, index)) {\n                result = index;\n                break;\n            }\n            current = current.next;\n        }\n        return result;\n    };\n    LinkedList.prototype.getNode = function (position) {\n        if (this.length === 0 || position < 0 || position >= this.length) {\n            throw new Error('Position is out of the list');\n        }\n        var current = this.head;\n        for (var index = 0; index < position; index++) {\n            current = current.next;\n        }\n        return current;\n    };\n    LinkedList.prototype.createInternalArrayRepresentation = function () {\n        var outArray = [];\n        var current = this.head;\n        while (current) {\n            outArray.push(current.value);\n            current = current.next;\n        }\n        this.asArray = outArray;\n    };\n    return LinkedList;\n}());\nexport { LinkedList };\n//# sourceMappingURL=linked-list.class.js.map","import { window } from './facade/browser';\nvar guessedVersion;\nfunction _guessBsVersion() {\n    if (typeof document === 'undefined') {\n        return null;\n    }\n    var spanEl = document.createElement('span');\n    spanEl.innerText = 'test bs version';\n    document.body.appendChild(spanEl);\n    spanEl.classList.add('d-none');\n    var rect = spanEl.getBoundingClientRect();\n    document.body.removeChild(spanEl);\n    if (!rect) {\n        return 'bs3';\n    }\n    return rect.top === 0 ? 'bs4' : 'bs3';\n}\nexport function setTheme(theme) {\n    guessedVersion = theme;\n}\n// todo: in ngx-bootstrap, bs4 will became a default one\nexport function isBs3() {\n    if (typeof window === 'undefined') {\n        return true;\n    }\n    if (typeof window.__theme === 'undefined') {\n        if (guessedVersion) {\n            return guessedVersion === 'bs3';\n        }\n        guessedVersion = _guessBsVersion();\n        return guessedVersion === 'bs3';\n    }\n    return window.__theme !== 'bs4';\n}\n//# sourceMappingURL=theme-provider.js.map","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\nvar Trigger = (function () {\n    function Trigger(open, close) {\n        this.open = open;\n        this.close = close || open;\n    }\n    Trigger.prototype.isManual = function () {\n        return this.open === 'manual' || this.close === 'manual';\n    };\n    return Trigger;\n}());\nexport { Trigger };\n//# sourceMappingURL=trigger.class.js.map","import { window } from './facade/browser';\nvar Utils = (function () {\n    function Utils() {\n    }\n    Utils.reflow = function (element) {\n        (function (bs) { return bs; })(element.offsetHeight);\n    };\n    // source: https://github.com/jquery/jquery/blob/master/src/css/var/getStyles.js\n    Utils.getStyles = function (elem) {\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n        // IE throws on elements created in popups\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n        var view = elem.ownerDocument.defaultView;\n        if (!view || !view.opener) {\n            view = window;\n        }\n        return view.getComputedStyle(elem);\n    };\n    return Utils;\n}());\nexport { Utils };\n//# sourceMappingURL=utils.class.js.map","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {CameraComponent} from './camera.component';\n\nconst routes: Routes = [{\n    path: '',\n    children: [\n        {\n            path: ':module',\n            component: CameraComponent\n        }\n    ]\n}];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class CameraRoutingModule {\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-2 col-md-4 col-sm-12 col-xs-12\\\">\\n    <pytel-take-image [module]=\\\"module\\\"></pytel-take-image>\\n  </div>\\n\\n  <div class=\\\"col-lg-10 col-md-10 col-sm-10 col-xs-12\\\">\\n    <pytel-image-preview [module]=\\\"module\\\"></pytel-image-preview>\\n  </div>\\n</div>\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n    selector: 'pytel-camera',\n    templateUrl: './camera.component.html',\n    styleUrls: ['./camera.component.css']\n})\nexport class CameraComponent implements OnInit {\n    public module: string;\n\n    constructor(private route: ActivatedRoute) {\n\n    }\n\n    ngOnInit() {\n        this.module = this.route.snapshot.params['module'];\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule} from '@angular/forms';\nimport {CameraComponent} from './camera.component';\nimport {CameraRoutingModule} from './camera-routing.module';\nimport {ImagePreviewComponent} from './image-preview/image-preview.component';\nimport {TakeImageComponent} from './take-image/take-image.component';\nimport {ProgressbarModule} from 'ngx-bootstrap/progressbar';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        HttpClientModule,\n        FormsModule,\n        CameraRoutingModule,\n        ProgressbarModule.forRoot()\n    ],\n    declarations: [CameraComponent, ImagePreviewComponent, TakeImageComponent],\n    providers: [],\n    exports: [CameraComponent]\n})\nexport class CameraModule {\n}\n","module.exports = \"\"","module.exports = \"<p>\\n    <a [hidden]=\\\"image?.length==0\\\" href=\\\"download/{{image}}\\\">\\n        Download image\\n    </a>\\n    <strong [hidden]=\\\"image?.length>0\\\">No image taken</strong>\\n</p>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-8\\\">\\n        <img *ngIf=\\\"image?.length>0\\\" src=\\\"/preview/{{image}}\\\" width=\\\"100%\\\">\\n    </div>\\n    <div class=\\\"col-md-4\\\" style=\\\"font-size: smaller;\\\">\\n        <table class=\\\"table table-striped table-bordered table-hover table-sm\\\" *ngIf=\\\"fits_headers$ | async as hdr\\\">\\n            <tr>\\n                <th>Key</th>\\n                <th>Value</th>\\n            </tr>\\n            <tr *ngFor=\\\"let item of hdr\\\">\\n                <td>{{item.key}}</td>\\n                <td>{{item.value}}</td>\\n            </tr>\\n        </table>\\n    </div>\\n</div>\"","import {Component, Input, OnInit} from '@angular/core';\nimport {Observable, Subscription} from 'rxjs';\nimport {JsonRpcService} from '../../shared/json-rpc.service';\nimport {HttpClient} from '@angular/common/http';\nimport {CameraStatus, Status} from '../../shared/status-factory';\nimport {map} from 'rxjs/operators';\n\n@Component({\n    selector: 'pytel-image-preview',\n    templateUrl: './image-preview.component.html',\n    styleUrls: ['./image-preview.component.css']\n})\nexport class ImagePreviewComponent implements OnInit {\n    public camera_status$: Observable<Status>;\n    @Input() module: string;\n    private subscription: Subscription;\n    private image: string;\n    private fits_headers$: Observable<any>;\n\n    constructor(private jsonrpc: JsonRpcService, private http: HttpClient) {\n\n    }\n\n    ngOnInit() {\n        this.camera_status$ = this.jsonrpc.getStatus(this.module, 'ICamera');\n        this.subscription = this.camera_status$.subscribe(status => this.updateFitsHeaders(status));\n\n    }\n\n    private updateFitsHeaders(status: Status) {\n        if (status instanceof CameraStatus) {\n            if (status.LastImage != null && status.LastImage.length > 0 && status.LastImage !== this.image) {\n                this.image = status.LastImage;\n                this.fits_headers$ = this.http.get('/headers/' + this.image)\n                    .pipe(map(json => {\n                        // convert dictionary to list of key/value/comment pairs\n                        let tmp = [];\n                        for (const key in json) {\n                            if (json.hasOwnProperty(key)) {\n                                tmp = tmp.concat([{\n                                    'key': key,\n                                    'value': json[key][0],\n                                    'comment': json[key][1]\n                                }]);\n                            }\n                        }\n                        // return sorted\n                        return tmp.sort((a, b) => a.key.localeCompare(b.key));\n                    }));\n            }\n        }\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<form class=\\\"form-compact\\\" role=\\\"form\\\" #exposeForm=\\\"ngForm\\\" *ngIf=\\\"camera_status$ | async; let status\\\">\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"inputType\\\">Image Type:</label>\\n        <select class=\\\"form-control\\\" id=\\\"inputType\\\" name=\\\"image_type\\\" [(ngModel)]=\\\"settings.image_type\\\">\\n            required>\\n            <option value=\\\"bias\\\">BIAS</option>\\n            <option value=\\\"dark\\\">DARK</option>\\n            <option value=\\\"object\\\">OBJECT</option>\\n            <option value=\\\"flat\\\">FLAT</option>\\n        </select>\\n    </div>\\n    <hr/>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"inputExpTime\\\">ExpTime [ms]:</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputExpTime\\\" placeholder=\\\"ExpTime [ms]\\\"\\n               name=\\\"exposure_time\\\" step=\\\"1000\\\"\\n               [ngModel]=\\\"settings.exposure_time\\\" [disabled]=\\\"settings.imgtype=='bias'\\\"\\n               required>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"inputExpCount\\\">Count:</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputExpCount\\\" placeholder=\\\"Exposure count\\\"\\n               name=\\\"count\\\" [ngModel]=\\\"settings.count\\\" required>\\n    </div>\\n    <hr/>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"inputBinning\\\">Binning:</label>\\n        <select class=\\\"form-control\\\" id=\\\"inputBinning\\\" name=\\\"binning\\\" [(ngModel)]=\\\"settings.binning\\\" required>\\n            <option value=\\\"1\\\">1x1</option>\\n            <option value=\\\"2\\\">2x2</option>\\n            <option value=\\\"3\\\">3x3</option>\\n        </select>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"inputLeft\\\">Left:</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputLeft\\\" placeholder=\\\"Left\\\"\\n               name=\\\"left\\\" [(ngModel)]=\\\"settings.window.left\\\" required>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"inputTop\\\">Top:</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputTop\\\" placeholder=\\\"Top\\\"\\n               name=\\\"top\\\" [(ngModel)]=\\\"settings.window.top\\\" required>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"inputWidth\\\">Width:</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputWidth\\\" placeholder=\\\"Width\\\"\\n               name=\\\"width\\\" [(ngModel)]=\\\"settings.window.width\\\" required>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"inputHeight\\\">Height:</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputHeight\\\" placeholder=\\\"Height\\\"\\n               name=\\\"height\\\" [(ngModel)]=\\\"settings.window.height\\\" required>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <button class=\\\"btn btn-primary form-control\\\" (click)=\\\"set_full_frame()\\\">Full frame</button>\\n    </div>\\n    <hr/>\\n    <div class=\\\"form-group\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-success btn-block form-control\\\"\\n                [disabled]=\\\"status.ExposuresLeft!=0 || status.Status!='idle'\\\"\\n                (click)=\\\"expose(exposeForm)\\\">\\n            Expose\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-warning btn-block form-control\\\"\\n                [disabled]=\\\"(status.ExposuresLeft==0 && status.Status=='idle') || sequence_aborted\\\"\\n                (click)=\\\"abort_after_exposure()\\\">\\n            Abort after exposure\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-block form-control\\\"\\n                [disabled]=\\\"(status.ExposuresLeft==0 && status.Status=='idle') || image_aborted\\\"\\n                (click)=\\\"abort_exposure()\\\">\\n            Abort exposure<span> &amp; sequence</span>\\n        </button>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <small [hidden]=\\\"status.ExposuresLeft<=1\\\">\\n            <em>{{status.ExposuresLeft}} exposure(s) left</em><br/>\\n        </small>\\n        <small>\\n            <em>Exposure time left: {{status.ExposureTimeLeft/1000. | number:'1.2-2'}} sec</em>\\n        </small>\\n        <progressbar class=\\\"progress-striped\\\" max=\\\"100\\\" [value]=\\\"status.Progress\\\" type=\\\"success\\\">\\n            {{status.Progress | number:'1.1-1'}}%\\n        </progressbar>\\n    </div>\\n</form>\"","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {ICameraService, JsonRpcService} from '../../shared/json-rpc.service';\nimport {Observable, Subscription} from 'rxjs';\nimport {NgForm} from '@angular/forms';\nimport {Status} from '../../shared/status-factory';\n\n\n@Component({\n    selector: 'pytel-take-image',\n    templateUrl: './take-image.component.html',\n    styleUrls: ['./take-image.component.css']\n})\nexport class TakeImageComponent implements OnInit {\n    public camera_status$: Observable<Status>;\n    @Input() module: string;\n    private settings = {\n        image_type: 'object',\n        binning: 1,\n        window: {},\n        exposure_time: 1000,\n        count: 1\n    };\n    private sequence_aborted = false;\n    private image_aborted = false;\n\n    constructor(private jsonrpc: JsonRpcService, private ICamera: ICameraService) {\n    }\n\n    ngOnInit() {\n        this.camera_status$ = this.jsonrpc.getStatus(this.module, 'ICamera');\n\n        // get full frame\n        this.set_full_frame();\n    }\n\n    public set_full_frame() {\n        // set full frame\n        this.ICamera.get_full_frame(this.module).subscribe(data => {\n            // calculate window for binning\n            this.settings.window = {\n                left: data.left,\n                top: data.top,\n                width: Math.floor(data.width / this.settings.binning),\n                height: Math.floor(data.height / this.settings.binning)\n            };\n        });\n\n        // don't submit form\n        return false;\n    }\n\n    public expose(form: NgForm) {\n        // set binning\n        const f = form.value;\n        const binning = Number.parseInt(f.binning);\n        this.ICamera.set_binning(this.module, binning, binning).subscribe(() => {\n            // set window\n            this.ICamera.set_window(this.module, f.left, f.top, f.width * binning, f.height * binning)\n                .subscribe(() => {\n                    // start exposures\n                    this.ICamera.expose(this.module, f.exposure_time, f.image_type, f.count).subscribe();\n                });\n        });\n    }\n\n    public abort_exposure() {\n        // abort current exposure\n        this.ICamera.abort(this.module).subscribe();\n        this.image_aborted = true;\n        this.sequence_aborted = true;\n    }\n\n    public abort_after_exposure() {\n        // abort current exposure\n        this.ICamera.abort_sequence(this.module).subscribe();\n        this.sequence_aborted = true;\n    }\n}\n"],"sourceRoot":""}