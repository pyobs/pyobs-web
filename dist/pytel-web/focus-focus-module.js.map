{"version":3,"sources":["webpack:///./src/app/focus/focus-routing.module.ts","webpack:///./src/app/focus/focus.component.css","webpack:///./src/app/focus/focus.component.html","webpack:///./src/app/focus/focus.component.ts","webpack:///./src/app/focus/focus.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAuC;AACc;AACJ;AAEjD,IAAM,MAAM,GAAW,CAAC;QACpB,IAAI,EAAE,EAAE;QACR,QAAQ,EAAE;YACN;gBACI,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,+DAAc;aAC5B;SACJ;KACJ,CAAC,CAAC;AAMH;IAAA;IACA,CAAC;IADY,kBAAkB;QAJ9B,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,kBAAkB,CAC9B;IAAD,yBAAC;CAAA;AAD8B;;;;;;;;;;;;AClB/B,mB;;;;;;;;;;;ACAA,mEAAmE,6bAA6b,cAAc,ynC;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9d;AACU;AAIX;AAO/C;IAII,wBAAoB,KAAqB,EAAU,OAAuB;QAAtD,UAAK,GAAL,KAAK,CAAgB;QAAU,YAAO,GAAP,OAAO,CAAgB;IAC1E,CAAC;IAED,iCAAQ,GAAR;QACI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACnD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;IACzE,CAAC;IAVQ,cAAc;QAL1B,+DAAS,CAAC;YACP,QAAQ,EAAE,aAAa;;;SAG1B,CAAC;yCAK6B,8DAAc,EAAmB,uEAAc;OAJjE,cAAc,CAW1B;IAAD,qBAAC;CAAA;AAX0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZY;AACM;AACS;AACX;AACM;AACS;AAc1D;IAAA;IACA,CAAC;IADY,WAAW;QAXvB,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,4DAAY;gBACZ,qEAAgB;gBAChB,0DAAW;gBACX,wEAAkB;aACrB;YACD,YAAY,EAAE,CAAC,+DAAc,CAAC;YAC9B,SAAS,EAAE,EAAE;YACb,OAAO,EAAE,CAAC,+DAAc,CAAC;SAC5B,CAAC;OACW,WAAW,CACvB;IAAD,kBAAC;CAAA;AADuB","file":"focus-focus-module.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {FocusComponent} from './focus.component';\n\nconst routes: Routes = [{\n    path: '',\n    children: [\n        {\n            path: ':module',\n            component: FocusComponent\n        }\n    ]\n}];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class FocusRoutingModule {\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"focus_status$ | async; let status\\\">\\n    <div class=\\\"col-md-4\\\">\\n        <h3>Focus</h3>\\n        <form #focusForm=\\\"ngForm\\\" (submit)=\\\"track(focusForm)\\\">\\n            <div class=\\\"form-group row\\\">\\n                <label for=\\\"curFocus\\\" class=\\\"col-sm-4 col-form-label\\\">Cur focus:</label>\\n                <div class=\\\"col-sm-8\\\">\\n                    <input type=\\\"text\\\" readonly class=\\\"form-control\\\" id=\\\"curFocus\\\"\\n                           value=\\\"{{status.Focus}} mm\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n                <label for=\\\"focus\\\" class=\\\"col-sm-4 col-form-label\\\">New focus:</label>\\n                <div class=\\\"col-sm-8\\\">\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"focus\\\" id=\\\"focus\\\" placeholder=\\\"Focus\\\"\\n                           [(ngModel)]=\\\"focus\\\" required>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n                <div class=\\\"offset-sm-4 col-sm-8\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" [disabled]=\\\"!focusForm.form.valid\\\">\\n                        Set focus\\n                    </button>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n                <div class=\\\"offset-sm-4 col-sm-8\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-block btn-default\\\" (click)=\\\"set_optimal_focus()\\\">\\n                        Set optimal focus\\n                    </button>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {JsonRpcService} from '../shared/json-rpc.service';\nimport {Status} from '../shared/status-factory';\nimport {Observable} from 'rxjs';\nimport {NgForm} from '@angular/forms';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n    selector: 'pytel-focus',\n    templateUrl: './focus.component.html',\n    styleUrls: ['./focus.component.css']\n})\nexport class FocusComponent implements OnInit {\n    public module: string;\n    public focus_status$: Observable<Status>;\n\n    constructor(private route: ActivatedRoute, private jsonrpc: JsonRpcService) {\n    }\n\n    ngOnInit() {\n        this.module = this.route.snapshot.params['module'];\n        this.focus_status$ = this.jsonrpc.getStatus(this.module, 'IFocuser');\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule} from '@angular/forms';\nimport {FocusComponent} from './focus.component';\nimport {FocusRoutingModule} from './focus-routing.module';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        HttpClientModule,\n        FormsModule,\n        FocusRoutingModule\n    ],\n    declarations: [FocusComponent],\n    providers: [],\n    exports: [FocusComponent]\n})\nexport class FocusModule {\n}\n"],"sourceRoot":""}