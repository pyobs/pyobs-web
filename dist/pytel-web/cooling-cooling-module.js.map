{"version":3,"sources":["webpack:///./src/app/cooling/cooling-routing.module.ts","webpack:///./src/app/cooling/cooling.component.css","webpack:///./src/app/cooling/cooling.component.html","webpack:///./src/app/cooling/cooling.component.ts","webpack:///./src/app/cooling/cooling.module.ts","webpack:///./src/app/shared/map-to-iterable.pipe.ts"],"names":[],"mappings":"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","file":"cooling-cooling-module.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {CoolingComponent} from './cooling.component';\n\nconst routes: Routes = [{\n    path: '',\n    children: [\n        {\n            path: ':module',\n            component: CoolingComponent\n        }\n    ]\n}];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class CoolingRoutingModule {\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"cooling_status$ | async; let status\\\">\\n    <div class=\\\"col-md-4\\\">\\n        <h3>Status</h3>\\n        <form>\\n            <div class=\\\"form-group row\\\" *ngFor=\\\"let temp of status.Temperatures | mapToIterable\\\">\\n                <label class=\\\"col-sm-4 col-form-label\\\">{{temp.key}}:</label>\\n                <div class=\\\"col-sm-8\\\">\\n                    <input type=\\\"text\\\" readonly class=\\\"form-control\\\" value=\\\"{{temp.val|number}}°C\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-sm-4 control-label\\\">Cooling:</label>\\n                <div class=\\\"col-sm-8\\\">\\n                    <input *ngIf=\\\"status.Enabled==true\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                           value=\\\"ON, Setpoint={{status.SetPoint|number}}°C\\\" readonly>\\n                    <input *ngIf=\\\"status.Enabled==false\\\" type=\\\"text\\\" class=\\\"form-control\\\"value=\\\"OFF\\\" readonly>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n                <label for=\\\"power\\\" class=\\\"col-sm-4 control-label\\\">Cooling power:</label>\\n                <div class=\\\"col-sm-8\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"power\\\" value=\\\"{{status.Power|number}}%\\\"\\n                           readonly>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n\\n    <div class=\\\"col-md-4\\\">\\n        <h3>Config</h3>\\n        <form #coolingForm=\\\"ngForm\\\" (submit)=\\\"set_cooling(coolingForm)\\\">\\n            <div class=\\\"form-group row\\\">\\n                <label for=\\\"setTemp\\\" class=\\\"col-sm-4 control-label\\\">Setpoint:</label>\\n                <div class=\\\"col-sm-8\\\">\\n                    <input type=\\\"number\\\" name=\\\"setTemp\\\" class=\\\"form-control\\\" id=\\\"setTemp\\\"\\n                           [(ngModel)]=\\\"cooling.setpoint\\\" [disabled]=\\\"!cooling.enabled\\\" required>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n                <div class=\\\"col-sm-offset-4 col-sm-8\\\">\\n                    <div class=\\\"checkbox\\\">\\n                        <label>\\n                            <input name=\\\"enable\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"cooling.enabled\\\">\\n                            Enable cooling\\n                        </label>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"col-sm-offset-4 col-sm-8\\\">\\n                    <button class=\\\"btn btn-primary btn-block\\\" [disabled]=\\\"!coolingForm.form.valid\\\">\\n                        Apply\\n                    </button>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ICoolingService, JsonRpcService} from '../shared/json-rpc.service';\nimport {Status} from '../shared/status-factory';\nimport {Observable} from 'rxjs';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n    selector: 'pytel-cooling',\n    templateUrl: './cooling.component.html',\n    styleUrls: ['./cooling.component.css']\n})\nexport class CoolingComponent implements OnInit {\n    public module: string;\n    public cooling_status$: Observable<Status>;\n    public cooling = { 'setpoint': 0., 'enabled': false };\n\n    constructor(private route: ActivatedRoute, private jsonrpc: JsonRpcService, private ICooling: ICoolingService) {\n    }\n\n    ngOnInit() {\n        this.module = this.route.snapshot.params['module'];\n        this.cooling_status$ = this.jsonrpc.getStatus(this.module, 'ICooling');\n    }\n\n    public set_cooling() {\n        this.ICooling.set_cooling(this.module, this.cooling.enabled, this.cooling.setpoint).subscribe();\n    }\n}\n\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule} from '@angular/forms';\nimport {CoolingComponent} from './cooling.component';\nimport {CoolingRoutingModule} from './cooling-routing.module';\nimport {MapToIterablePipe} from '../shared/map-to-iterable.pipe';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        HttpClientModule,\n        FormsModule,\n        CoolingRoutingModule\n    ],\n    declarations: [CoolingComponent, MapToIterablePipe],\n    providers: [],\n    exports: [CoolingComponent]\n})\nexport class CoolingModule {\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'mapToIterable'\n})\nexport class MapToIterablePipe implements PipeTransform {\n    transform(dict: Object) {\n        const a = [];\n        for (const key in dict) {\n            if (dict.hasOwnProperty(key)) {\n                a.push({key: key, val: dict[key]});\n            }\n        }\n        return a;\n    }\n}"],"sourceRoot":""}